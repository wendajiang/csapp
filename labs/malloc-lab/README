ðŸ‘€ NOTICE:
The source of this lab (the original tar file) is from 
https://www.cs.cmu.edu/afs/cs/academic/class/15213-f10/www/labs/malloclab-handout.tar,
which is different from other labs that are from official student website http://csapp.cs.cmu.edu/3e/labs.html

#####################################################################
My implementation for malloc lab:

- mm-naive:     extremely simple version, from handout
- mm-implicit:  implicit free list, with macros, based on code from textbook
- mm-baseline:  implicit free list, with inline helper functions
- mm-explicit:  explicit free list
- mm-segregated:segregated free list
- mm-final:     segregated free list, based on mm-segregated, apply as many optimizations as possible

the final score is 91.81, see `results` folder for details

#####################################################################
# CS:APP Malloc Lab
# Handout files for students
######################################################################

***********
Main Files:
***********

mdriver
        Once you've run make, run ./mdriver to test your solution.

traces/
	Directory that contains the trace files that the driver uses
	to test your solution. Files orners.rep, short2.rep, and malloc.rep
	are tiny trace files that you can use for debugging correctness.

**********************************
Other support files for the driver
**********************************

config.h	Configures the malloc lab driver
fsecs.{c,h}	Wrapper function for the different timer packages
clock.{c,h}	Routines for accessing the Pentium and Alpha cycle counters
fcyc.{c,h}	Timer functions based on cycle counters
ftimer.{c,h}	Timer functions based on interval timers and gettimeofday()
memlib.{c,h}	Models the heap and sbrk function

*******************************
Building and running the driver
*******************************
To build the driver, type "make" to the shell.

To run the driver on a tiny test trace:

	unix> ./mdriver -V -f traces/malloc.rep

To get a list of the driver flags:

	unix> ./mdriver -h

The -V option prints out helpful tracing information
